#include <iostream>
#include <queue>
using namespace std;

struct BstNode {
	int data;
	BstNode* left;
	BstNode* right;
};
BstNode *root=NULL;
BstNode *LIST(BstNode *root);
BstNode *Insert(BstNode *root,int a);
BstNode *Delete(BstNode *root,int a);
BstNode *Search(BstNode *root,int a);
BstNode *Show(BstNode *root,int a);
BstNode *NewNode(int a);
BstNode*temp=NULL;
int main() {
	LIST(root);
	return 0;
}


BstNode *LIST(BstNode *root) {

	int sel;
	while(1) {

		cout<<"1.Insert   2.Delete   3.Search    4.Show   5.end:";
		cin>>sel;

		switch(sel) {
			case 1:
				int InsNum;
				cout<<"Enter the number which you want to insert:";
				cin>>InsNum;
				root=Insert(root,InsNum);
				break;
			case 2:
				int DelNum;
				cout<<"Enter the number which you want to insert:";
				cin>>DelNum;
				break;
			case 3:
				int SeaNum;
				BstNode *Seroot,*R,*L,*SR,*SL;
				cout<<"Enter the number which you want to Search:";
				cin>>SeaNum;
				Seroot=Search(root,SeaNum);
				if(Seroot!=NULL) {
					R=Seroot->right;
					L=Seroot->left;
					cout<<"d";
					if(SeaNum<=Seroot->data) {
						SR=L->right;
						SL=L->left;
						cout<<"parent:"<<Seroot->data<<endl;
						if(L->left!=NULL)
							cout<<"左子為:"<<SL->data<<endl;
						if(L->right!=NULL)
							cout<<"右子為:"<<SR->data<<endl;
					} else {
						SL=R->left;
						SR=R->right;
						cout<<"parent:"<<Seroot->data<<endl;
						if(R->left!=NULL)
							cout<<"左子為:"<<SL->data;
						if(R->right!=NULL)
							cout<<"右子為:"<<SR->data;
					}
				}
				break;
			case 4:
				cout<<"Show the BST:";
				break;
			case 5:
				return 0 ;
				break;
		}
	}
}

BstNode *NewNode(int a) {
	BstNode *Newroot=new BstNode;
	Newroot->data=a;
	Newroot->left=NULL;
	Newroot->right=NULL;
	return Newroot;
}





BstNode *Insert(BstNode *root,int a) {
	if(root==NULL) {
		root=NewNode(a);
	} else if(root->data>=a) {
		root->left=Insert(root->left,a);
	} else {
		root->right=Insert(root->right,a);
	}
	return root;
}
BstNode *Delete(BstNode *root,int a) {

}


BstNode *Search(BstNode *root,int a) {

	if(root==NULL) {
		cout<<"沒東西"<<endl;
	} else if(root->data==a) {
		return temp;
	} else if(root->data>=a) {
		temp=root;
		Search(root->left,a);
	} else {
		temp=root;
		Search(root->left,a);
	}
}


BstNode *Show(BstNode *root,int a) {

}
